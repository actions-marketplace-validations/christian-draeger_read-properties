name: CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    # test 1
    - name: Read first property
      id: read_first_property
      uses: ./
      with:
        path: './test/foo.properties'
        properties: 'foo'
    - name: Do something with the property value
      run: echo ${{ steps.read_first_property.outputs.foo }}
    - name: Verify first property has been read correctly
      if: steps.read_first_property.outputs.foo != 'bar'
      run: exit 1

    # test 2
    - name: Read third property
      id: read_third_property
      uses: ./
      with:
        path: './test/foo.properties'
        properties: 'foo.bar.foo'
    - name: Verify third property has been read correctly
      if: steps.read_third_property.outputs.foo-bar-foo != 'foo bar'
      run: exit 1

      # test 3
    - name: Read second property
      id: read_second_property
      uses: ./
      with:
        path: './test/foo.properties'
        properties: 'foo.bar'
    - name: Verify second property has been read correctly
      if: steps.read_second_property.outputs.foo-bar != 'foobar'
      run: exit 1

    # test 4: properties with spaces around the equals sign.
    - name: Read property with spaces
      id: read_property_with_spaces
      uses: ./
      with:
        path: './test/foo.properties'
        properties: 'with.space'
    - name: Verify property with spaces has been read correctly
      if: steps.read_property_with_spaces.outputs.with-space != '42'
      run: exit 1

    # test 5: read multiple properties
    - name: Read multiple properties
      id: read_multiple_properties
      uses: ./
      with:
        path: './test/foo.properties'
        properties: 'foo foo.bar'
    - name: Verify multiple properties have been read correctly
      if: steps.read_multiple_properties.outputs.foo != 'bar'
        || steps.read_multiple_properties.outputs.foo-bar != 'foobar'
      run: exit 1
